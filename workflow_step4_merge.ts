test_sheet(1)
.config()
.script_path(git(..))


test_case(1)
.start()
.given(using TEST database).sql_many(USE TEST,$TRUNCATE_QUEUE_TABLE,$TRUNCATE_STEP3_TABLE)
.and(be_workflow_queue has no data at all)
.and(e_workflow_step3_mapped_rows has also NO data for the current batch)
.and(the current data is 20180619 and hour is 03)
.when(workflow_step4_merge_queue_rows_hourly.sql runs)
.then(it won't generate any rows in be_workflow_step4_merged_rows table).assert_equals(single(sql($SELECT_COUNT_QRY_STEP4_TABLE)),2)
.end()


test_case(2)
.start()
.given(using TEST database).sql_many(USE TEST,$TRUNCATE_QUEUE_TABLE,$TRUNCATE_STEP3_TABLE)
.and(be_workflow_queue has DUMMY data for the maximum date and hour)
.and(be_workflow_step3_mapped_rows has 3 rows for the current batch)
.and(the current data is 20180619 and hour is 03)
.when(workflow_step4_merge_queue_rows_hourly.sql runs)
.then(all the rows from be_workflow_step3_mapped_rows table will be inserted into be_workflow_step4_merged_rows table).assert_equals(single(sql($SELECT_COUNT_QRY_STEP4_TABLE)),3)
.and(dummy data rows from queue table will not be inserted).assert_equals(single(sql($SELECT_COUNT_DUMMY_ROWS_STEP4_TABLE)),0)
.end()